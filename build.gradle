plugins {
    id 'java'
    id 'application'
    id 'org.beryx.jlink' version '2.25.0'
    id 'edu.sc.seis.launch4j' version '2.5.3'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'net.insprill'
version '1.3.0'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'net.lingala.zip4j:zip4j:2.11.2'
    implementation 'com.github.junrar:junrar:7.5.3'

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.1")
}

shadowJar {
    from("LICENSE")
    archiveFileName.set('CustomCarManager.jar')
}

jar { enabled = false }

assemble.finalizedBy(createAllExecutables)

application {
    mainModule = 'net.insprill.customcarmanager'
    mainClass = 'net.insprill.customcarmanager.CustomCarManager'
}

javafx {
    version = sourceCompatibility
    modules = ['javafx.controls', 'javafx.fxml']
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

launch4j {
    jarTask = shadowJar
    mainClassName = 'net.insprill.customcarmanager.CustomCarManager'
    icon = "${rootDir}/src/main/resources/icons/icon.ico"
    outfile = "CustomCarManager.exe"
    downloadUrl = "https://adoptium.net/temurin/archive?version=17"
}

task packageDistribution(type: Zip) {
    archiveFileName = "CustomCarManager.zip"
    destinationDirectory = file("$buildDir/dist")

    from ("$buildDir/launch4j/CustomCarManager.exe")
}
